.\" Automatically generated by Pandoc 2.2.1
.\"
.TH "AUTOSHUTDOWN" "1" "November 2019" "" ""
.hy
.SH NAME
.PP
\f[B]autoshutdown\f[] \- bash daemon to shutdown host by inactivity.
.PP
This version is fork from openmediavault\-autoshutdown working without
omv, and add transmission check.
.SH SYNOPSIS
.PP
\f[B]autoshutdown\f[]
.PP
All options in \f[B]/etc/autoshutdown.conf\f[]
.SH DESCRIPTION
.PP
How it works:
.PP
\f[B]autoshutdown\f[], later called \[lq]ASD\[rq] does some checks on
the network or on the server itself.
.PP
A \[lq]cycle\[rq] is a set of checks.
Between the cycles ASD goes into sleep for x seconds.
.PP
The checks have a different priority from 0 = high to 5 = low:
.IP "1." 3
Stayup\-range: UPHOURS (is the server in the timerange, where it should
stay online)
.IP "2." 3
IPs
.IP "3." 3
Ports (Network sockets)
.IP "4." 3
UL/DL\-Rate in kB/s (only over the last minute)
.IP "5." 3
processes, daemons
.IP "6." 3
ASD\-plugins
.PP
If a check with a higher priority gives back a positive result, then no
check with a lower priority is executed.
The script reduces the cycles by one and goes to sleep for x seconds
until the next cycle.
If all cycles are 0 (zero) the server is shutting down.
.PP
Let's have a look at a example: \[em] autoshutdown.conf \[em]
.IP
.nf
\f[C]
ENABLE=true
CYCLES=4
SLEEP=180
RANGE="5..100"
CHECKCLOCKACTIVE="true"
UPHOURS="6..20"
NSOCKETNUMBERS="21,22,80,139,445,3689,6991,9091,49152"
ULDLCHECK="true"
ULDLRATE=50
LOADAVERAGECHECK="true"
LOADAVERAGE=30
SYSLOG="true"
VERBOSE="false"
FAKE="false"
TEMPPROCNAMES="\-"
\f[]
.fi
.PP
It is 10:00 am.
ASD does the first check:
.PP
Prio 0: UPHOURS They are set to \[lq]6..20\[rq] which means 06:00 \-
08:00 (6am to 8pm).
No further checks needed, the script sleeps until 8pm.
.PP
It is 20:01 (8:01pm) now and ASD does further checks:
.PP
Prio 0: UPHOURS The server is not in the (forced) stayup\-range (6..20)
=> negative, next check
.PP
Prio 1: IPs Let's assume, that only IP 137 is online, so the check is
negative, next check
.PP
Prio 2: Ports Let's assume, that there is no connection on any port to
watch.
The check is negative, next check
.PP
Prio 3: UL/DL\-Rate Maybe a DL is running with 238 kB/s over the last
minute.
The check is positive, no more checks needed.
ASD goes to sleep for x seconds.
.PP
Prio 4 and 5: not needed, because a check with a higher priority is
positive
.PP
\f[B]Expert Settings in autoshutdown.conf:\f[]
.PP
\f[B]LOADPROCNAMES\f[] command names of processes with load dependent
children to check if they have something to do checked by
default=\[lq]proftpd,smbd,nfsd,transmission\-daemon,mt\-daapd,forked\-daapd\[rq])
.PP
\f[B]TEMPPROCNAMES\f[] command names of processes only started when
active checked with \[lq]top\[rq] AND \[lq]ps\[rq], so all processes are
found, even such, which doesn't show up in top like \[lq]lftp\[rq] \-
Beware: If the process shows up in \[lq]ps\[rq] when there is no
connection, your PC won't shutdown! maybe you have to call the process
like this: \[lq]lftp \-do \-something \-here && exit\[rq] checked by
default=\[lq]in.tftpd\[rq])
.PP
if you want other processes than the default ones, please uncomment the
above lines and add your process at the end of the line to disable the
process\-check, set LOADPROCNAMES=\[lq]\-\[rq] or
TEMPPROCNAMES=\[lq]\-\[rq]
.PP
The following scheme is mandatory for both LOADPROCNAMES and
TEMPPROCNAMES: process1,process2 all processes separated by comma `,'
.PP
\f[B]HDDIOCHECK\f[] Set this to \[lq]true\[rq] and the script checks, if
a HDD\-IO (read/write) is over a defined value in kB/s (default:
HDDIO_RATE=400) and then don't shutdown the Server.
This value is calculated with the SLEEP\-time between every cycle of the
script\-checks.
E.g.: You have defined HDDIO_RATE=2000 and SLEEP=100, then the HDD\-IO
(read or write) has to be over 200000kB (2000*100) within the last 100
sec to not shutdown the server.
.PP
\f[B]PINGLIST\f[] With this, you can define a path to a file, which
contains list of IPs that should be scanned only one IP per line is
allowed \- Format: mmm.nnn.ooo.ppp e.g.: 192.168.1.45 If this
expert\-setting is used, the IPs specified in \[lq]RANGE\[rq] or in GUI
doesn't work
.PP
\f[B]PLUGINCHECK\f[] Set this to true, if autoshutdown.sh checks for
PlugIns in /etc/autoshutdown.d set it to \[lq]false\[rq] (or commented)
to skip the check
.PP
E.g.: When ClamAV does a check, the Server shouldn't shut down How to do
that?
Let's look at a example: in the clamav\-plugin for autoshutdown
(etc/autoshutdown.d/clamav) the following is set:
.IP
.nf
\f[C]
#\ In\ which\ folder\ is\ the\ file\ to\ look\ for
folder="/var/run/clamav"
#\ filename\ (can\ be\ expanded\ with\ regexes)
file="clamdscan\-[a\-f0\-9]{8}\-[a\-f0\-9]{4}\-[a\-f0\-9]{4}\-[a\-f0\-9]{4}\-[a\-f0\-9]{12}"
\f[]
.fi
.PP
Then, if a file i.e.: clamdscan\-aaaa3556\-adfe\-5678\-abcdef012345 (or
whatever UUID) in /var/run/clamav exists, the Server isn't shutdown
.PP
also possible: folder=\[lq]/home/user\[rq] file=\[lq]backup.status\[rq]
content=\[lq]processing job\[rq]
.PP
If a file /home/user/backup.status exists with the content `processing
job', the Server isn't shutdow This is useful for backupscripts.
It is not nice if the PC is shutting down while the backup\-script is
running.
In my backup\-script i use a simple
.IP
.nf
\f[C]
echo\ "processing\ job"\ >\ /home/user/backup.status
\f[]
.fi
.PP
at the beginning and a
.IP
.nf
\f[C]
rm\ /home/user/backup.status
\f[]
.fi
.PP
at the end of the script.
In the boot\-Phase also a
.IP
.nf
\f[C]
rm\ /home/user/*.status
\f[]
.fi
.PP
to delete all *.status files, which are not deleted before (loss of
power for example)
.PP
Please have a look at the two example files in /etc/autoshutdown.d
.PP
\f[B]FORCE_NIC\f[] e.g.\ FORCE_NIC=\[lq]eth1\[rq] forces autoshutdown to
look for a IP first in the given device, after that all others are
checked.
.PP
\f[B]SHUTDOWNCOMMAND\f[] If you don't want to shutdown your PC, but go
in hibernate/suspend: Define the command here
.PP
If nothing is defined, it shuts down with \[lq]shutdown \-h now\[rq]
.IP
.nf
\f[C]
SHUTDOWNCOMMAND="pm\-hibernate"\ 
\f[]
.fi
.PP
=> puts the PC in hibernate\-mode
.IP
.nf
\f[C]
SHUTDOWNCOMMAND="pm\-suspend"
\f[]
.fi
.PP
=> puts the PC in suspend\-mode
.IP
.nf
\f[C]
SHUTDOWNCOMMAND="shutdown\ \-h\ +5"\ 
\f[]
.fi
.PP
=> shuts the PC down 5 min after shutdown\-command
.PP
For more information and how to set up hibernate and suspend, look here:
http://wiki.debian.org/Suspend http://wiki.debian.org/Hibernation
.SH AUTHORS
Partizand.
